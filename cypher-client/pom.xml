<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>uk.ac.rothamsted.knetminer.backend</groupId>
    <artifactId>backend-pom</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>cypher-client</artifactId>
  <name>cypher-client -- KnetMiner Cypher client</name>

	<properties>
	</properties>

  <dependencies>
		<dependency>
			<groupId>uk.ac.rothamsted.rdf.neo4j</groupId>
			<artifactId>neo4j-utils</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.ondex.core</groupId>
			<artifactId>api</artifactId>
		</dependency>		  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
		<dependency>
			<groupId>net.sourceforge.ondex.core</groupId>
			<artifactId>lucene</artifactId>
		</dependency>
		<dependency>
		  <groupId>net.sourceforge.ondex.modules</groupId>
		  <artifactId>rdf-common</artifactId>
			<scope>test</scope>
		</dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
			<groupId>net.sourceforge.ondex.core</groupId>
			<artifactId>workflow-api</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.ondex.core</groupId>
      <artifactId>tools</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
		<dependency>
			<groupId>net.sourceforge.ondex.modules</groupId>
			<artifactId>oxl</artifactId>
			<scope>test</scope>
		</dependency>
  </dependencies>
  
  <build>
		<plugins>
			<!-- 
				Unzip test files. This happens after neo4j-server-maven-plugin has downladed the 
				Neo4j distribution, see below. 
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<goals><goal>run</goal></goals>
						<configuration>
							<tasks>
								<!--
									A test Neo4j database, based on ara-tiny.oxl
									Both are created manually via update-resources.sh 
								-->
								<untar 
									src = "src/test/resources/ara-tiny-neo4j.tar.bz2" 
									dest = "target/neo4j-server/neo4j-community-${neo4j.server.version}/data/databases"
									compression = "bzip2"
								/>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>	
			
			
		  <!-- 
				A small plug-in that starts Neo4j. 
				
				1.1 is the official version that integrated our improvements at
				at https://github.com/Rothamsted/neo4j-server-maven-plugin 
		  -->		  
	    <plugin>
		    <groupId>com.github.harti2006</groupId>
			  <artifactId>neo4j-server-maven-plugin</artifactId>
				<executions>
					<!-- This is just to download it before the ant/untar task above -->
					<execution>
						<id>neo4j-server-download</id>
						<phase>generate-test-resources</phase>
						<goals><goal>start</goal></goals>
						<configuration><deleteDb>true</deleteDb></configuration>
					</execution>
					<!-- Was loaded, now stop, so that ant/untar can put test data in place -->
					<execution>
						<id>neo4j-server-stop-before-population</id>
						<phase>generate-test-resources</phase>
						<goals><goal>stop</goal></goals>
					</execution>
					<!-- Proper start/stop around integration tests are inherited from the parent POM -->
				</executions>		        
	    </plugin>	

			<plugin>
	      <artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins> 
		
  </build>
</project>
